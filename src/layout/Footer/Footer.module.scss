@use "../../styles/variables/static";

.foot {
  display: flex;
  flex-direction: column;
  align-items: center;

  position: relative;
  z-index: 50;

  background-color: var(--colorSecondaryShade);
  color: var(--colorSecondaryLight);
}

.container {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-auto-rows: max-content;
  align-items: start;

  @media only screen and (max-width: static.$bpSmallest) {
    grid-template-columns: 1fr;
  }
}

.container {
  .social {
    svg {
      fill: var(--colorDark);
    }

    a {
      &:hover,
      &:active,
      &:focus {
        svg {
          fill: var(--colorSecondaryLight);
        }
      }
    }
  }
}

.social {
  grid-template-columns: repeat(6, 1fr);

  grid-column: -3 / span 2;
  justify-self: end;
  align-self: center;

  @media only screen and (max-width: static.$bpSmallest) {
    justify-self: center;
    grid-column: auto;
  }
}

.map {
  grid-column: 1 / span 3;
  grid-row: 1 / span 4;

  grid-template-columns: repeat(3, 1fr);

  @media only screen and (max-width: static.$bpMedium) {
    grid-column: 1 / span 2;
  }

  @media only screen and (max-width: static.$bpSmallest) {
    grid-column: auto;
    margin-bottom: 2.4rem;
  }
}

.pay {
  grid-column: -3 / span 2;
  justify-self: end;

  @media only screen and (max-width: static.$bpSmallest) {
    justify-self: center;
    grid-column: auto;
  }
}

.address {
  grid-column: -3 / span 2;

  @media only screen and (max-width: static.$bpSmallest) {
    justify-self: center;
    grid-column: auto;
  }
}

.copy {
  grid-column: 1/-1;
  padding-top: 1.2rem;
  margin-top: 1.2rem;

  text-align: center;
  border-top: 1px solid var(--colorPrimaryTint);
}
